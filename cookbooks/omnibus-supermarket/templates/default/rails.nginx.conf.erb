# Nginx configuration for Supermarket's Rails app
#
# Generated by Chef

upstream rails {
  server 127.0.0.1:<%= node['supermarket']['rails']['port'] %>;
}

<% if node['supermarket']['nginx']['cache']['enable'] -%>
proxy_cache_path <%= node['supermarket']['nginx']['cache']['directory'] %>/supermarket levels=1:2 keys_zone=supermarket-cache:512m max_size=1000m inactive=600m;
proxy_temp_path  <%= node['supermarket']['nginx']['cache']['directory'] %>/tmp;

log_format cache '$remote_addr - [$time_local] "$request" $upstream_cache_status $upstream_response_time $upstream_status';
<% end %>

server {
  listen <%= node['supermarket']['nginx']['non_ssl_port'] %> default_server;
  server_name <%= node['supermarket']['fqdn'] %>;
<% if node['supermarket']['nginx']['force_ssl'] -%>
  proxy_set_header        Host            $host;
  proxy_set_header        X-Real-IP       $remote_addr;
  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header        X-Forwarded-Proto http;
  proxy_pass_request_headers on;
  proxy_connect_timeout   90;
  proxy_send_timeout      90;
  proxy_read_timeout      90;
  location / {
    if ($http_x_forwarded_proto != 'https') {
      return 301 https://$server_name$request_uri;
    }
  }
}

server {
  listen <%= node['supermarket']['nginx']['ssl_port'] %>;
  server_name <%= node['supermarket']['fqdn'] %>;

<%   if node['supermarket']['ssl']['enabled'] -%>
  ssl on;
  ssl_certificate <%= node['supermarket']['ssl']['certificate'] %>;
  ssl_certificate_key <%= node['supermarket']['ssl']['certificate_key'] %>;
  ssl_dhparam <%= node['supermarket']['ssl']['ssl_dhparam'] %>;
  ssl_prefer_server_ciphers on;
  ssl_ciphers <%= node['supermarket']['ssl']['ciphers'] %>;
  ssl_protocols <%= node['supermarket']['ssl']['protocols'] %>;
  ssl_session_cache <%= node['supermarket']['ssl']['session_cache'] %>;
  ssl_session_timeout <%= node['supermarket']['ssl']['session_timeout'] %>;
<%   end -%>
<% end -%>

<% if node['supermarket']['nginx']['redirect_to_canonical'] -%>
  set $redirect_to_canonical 0;

  # Redirect anything that isn't an ip address (for ELB checks) or the
  # canonical server name to <%= node['supermarket']['fqdn'] %>
  if ($host !~ "^(<%= node['supermarket']['fqdn'].gsub('.', '\.') %>|[0-9.]+)$") {
    set $redirect_to_canonical H;
  }

  # Faraday is the user agent of old berkshelf clients that
  # redirecting broke in the past, detect it so we can redirect
  # accordingly
  if ($http_user_agent ~ 'Faraday') {
    set $redirect_to_canonical 0;
  }

  # This stops redirects for knife cookbook site share, which uses net/http,
  # and thus 'Ruby' as the user agent.
  if ($http_user_agent ~ 'Ruby') {
    set $redirect_to_canonical 0;
  }

  if ($redirect_to_canonical = H) {
    return 301 http<%= node['supermarket']['nginx']['force_ssl'] ? 's' : '' %>://<%= node['supermarket']['fqdn'] %>$request_uri;
  }
<% end -%>

<% if node['supermarket']['nginx']['cache']['enable'] -%>
  access_log <%= node['supermarket']['nginx']['log_directory'] %>/cache.log cache;
<% end -%>

  location ~ /sitemap\d*.xml.gz {
    root <%= node['supermarket']['app_directory'] %>/public;
    break;
  }

  location ~ ^/(assets|system)/ {
    root <%= node['supermarket']['app_directory'] %>/public;
    expires 1y;
    add_header Cache-Control public;
    add_header ETag "";
    break;
  }

<% if node['supermarket']['nginx']['cache']['enable'] -%>
  location ~ ^/api/v1/cookbooks/.*/versions/.*(/download)?$ {
    proxy_set_header HOST $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_pass http://rails;
    proxy_redirect off;

    proxy_ignore_headers Set-Cookie Cache-Control;
    proxy_buffering on;

    proxy_cache   supermarket-cache;
    proxy_cache_valid   200 302 240m;
    proxy_cache_valid   any     5m;
    expires   240m;

    # to serve gzipped text and json responses
    gzip on;
    gzip_proxied expired no-cache no-store private auth;
  }
<% end -%>

  location / {
    proxy_set_header HOST $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto <%= node['supermarket']['ssl']['enabled'] ? 'https' : 'http' %>;
    proxy_pass http://rails;
    proxy_redirect off;

    # to serve gzipped text and json responses
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/json;
  }
}
